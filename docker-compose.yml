version: '3.8'

services:
  # Magic Image 主应用
  magic-image:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_TIME: ${BUILD_TIME:-}
        APP_VERSION: ${APP_VERSION:-1.0.0}
      platforms:
        - linux/amd64
        - linux/arm64
    image: magic_image:latest
    container_name: magic_image_app
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
    volumes:
      # 数据持久化
      - magic_data:/app/data
      - magic_logs:/app/logs
      - magic_uploads:/app/public/uploads
    networks:
      - magic_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.magic-image.rule=Host(`localhost`)"
      - "traefik.http.services.magic-image.loadbalancer.server.port=3000"

  # Redis 缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: magic_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - magic_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-magic123}
    profiles:
      - with-redis

  # PostgreSQL 数据库（可选）
  postgres:
    image: postgres:15-alpine
    container_name: magic_postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-magic_image}
      POSTGRES_USER: ${POSTGRES_USER:-magic_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-magic_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - magic_network
    profiles:
      - with-database

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: magic_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - magic_logs:/var/log/nginx
    networks:
      - magic_network
    depends_on:
      - magic-image
    profiles:
      - with-nginx

# 数据卷定义
volumes:
  magic_data:
    driver: local
  magic_logs:
    driver: local
  magic_uploads:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

# 网络定义
networks:
  magic_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
